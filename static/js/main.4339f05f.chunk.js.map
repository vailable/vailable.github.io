{"version":3,"sources":["Calendar.js","QueryParser.js","App.js","index.js"],"names":["TitleDialog","name","open","close","setName","titleText","useRef","Dialog","onClose","DialogTitle","DialogContent","TextField","autoFocus","type","inputRef","defaultValue","DialogActions","Button","onClick","current","value","Calendar","data","setData","useState","titleDialogOpen","setTitleDialogOpen","location","useLocation","Container","disableGutters","n","Paper","Grid","container","item","xs","direction","justify","alignItems","style","paddingTop","paddingLeft","paddingRight","spacing","wrap","fontSize","Typography","variant","size","l","a","endIcon","url","pathname","search","window","navigator","canShare","share","title","text","clipboard","writeText","then","catch","e","onCommitChanges","added","changed","deleted","startingAddedId","length","id","map","appointment","undefined","filter","shadePreviousAppointments","shadePreviousCells","showOpenButton","showDeleteButton","showCloseButton","onVisibilityChange","visible","scroll","top","left","behavior","encode","LZString","compressToEncodedURIComponent","JSON","stringify","decode","params","version","Error","parse","decompressFromEncodedURIComponent","Array","isArray","QueryParser","history","useHistory","matchVersion","useRouteMatch","path","exact","sensitive","strict","substring","v","push","Date","App","prefersDarkMode","useMediaQuery","theme","useMemo","createMuiTheme","palette","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4339f05f.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EventAvailableTwoToneIcon from \"@material-ui/icons/EventAvailableTwoTone\";\nimport ShareTwoToneIcon from \"@material-ui/icons/ShareTwoTone\";\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  MonthView,\n  Appointments,\n  Toolbar,\n  DateNavigator,\n  AppointmentTooltip,\n  AppointmentForm,\n  ViewSwitcher,\n  TodayButton,\n  DayView,\n  WeekView,\n  EditRecurrenceMenu,\n  CurrentTimeIndicator,\n  DragDropProvider,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { useLocation } from \"react-router-dom\";\n\n// TODO:\n// set name and remember for future adds? with a cookie or local storage?\n// auto display widest range by default?\n\nfunction TitleDialog({ name, open, close, setName }) {\n  const titleText = useRef();\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Calendar Name</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          type=\"text\"\n          inputRef={titleText}\n          defaultValue={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button\n          onClick={() => {\n            setName(titleText.current.value);\n            close();\n          }}\n        >\n          Okay\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction Calendar({ data, setData }) {\n  const [titleDialogOpen, setTitleDialogOpen] = useState(false);\n  const location = useLocation();\n\n  return (\n    <Container disableGutters>\n      <TitleDialog\n        name={data.n}\n        open={titleDialogOpen}\n        close={() => setTitleDialogOpen(false)}\n        setName={(name) => {\n          data.n = name;\n          setData(data);\n        }}\n      />\n      <Paper>\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{\n              paddingTop: \"0.5rem\",\n              paddingLeft: \"0.5rem\",\n              paddingRight: \"0.5rem\",\n            }}\n          >\n            <Grid\n              item\n              xs\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n              spacing={1}\n              wrap=\"nowrap\"\n            >\n              <Grid item>\n                <EventAvailableTwoToneIcon fontSize=\"large\" />\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h5\">Vailable</Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"caption\">Easy Calendar Sharing</Typography>\n              </Grid>\n            </Grid>\n            <Grid\n              item\n              xs\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={1}\n              wrap=\"nowrap\"\n            >\n              <Grid item>\n                <Button\n                  size=\"large\"\n                  variant=\"outlined\"\n                  onClick={() => setTitleDialogOpen(true)}\n                >\n                  {data.n || \"Unnamed Calendar\"}\n                </Button>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"caption\">\n                  last edited {data?.l || \"never\"}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid\n              item\n              xs\n              container\n              direction=\"row\"\n              justify=\"flex-end\"\n              alignItems=\"center\"\n              spacing={1}\n              wrap=\"nowrap\"\n            >\n              <Grid item>\n                <Button\n                  size=\"medium\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    setData({ a: [] });\n                  }}\n                >\n                  Create New\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  size=\"medium\"\n                  variant=\"outlined\"\n                  endIcon={<ShareTwoToneIcon />}\n                  onClick={() => {\n                    const url = `https://vailable.github.io${location.pathname}${location.search}`;\n                    if (\n                      window.navigator.canShare &&\n                      window.navigator.canShare()\n                    ) {\n                      window.navigator.share({\n                        title: data.n || \"Vailable\",\n                        text: `${\n                          data.n ? \"Vailable - \" : \"\"\n                        }Easy Calendar Sharing App`,\n                        url,\n                      });\n                    } else if (window.navigator.clipboard) {\n                      window.navigator.clipboard\n                        .writeText(url)\n                        .then(() => {\n                          // TODO: toast or popover saying link copied\n                        })\n                        .catch((e) => {\n                          // TODO: pop up a modal with the link and directions to copy and send to someone to share\n                        });\n                    }\n                  }}\n                >\n                  Share Changes\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Scheduler data={data.a}>\n              <EditingState\n                onCommitChanges={({ added, changed, deleted }) => {\n                  if (added) {\n                    const startingAddedId =\n                      data.a.length > 0 ? data.a[data.a.length - 1].id + 1 : 0;\n                    data.a = [...data.a, { id: startingAddedId, ...added }];\n                  }\n                  if (changed) {\n                    data.a = data.a.map((appointment) =>\n                      changed[appointment.id]\n                        ? { ...appointment, ...changed[appointment.id] }\n                        : appointment\n                    );\n                  }\n                  if (deleted !== undefined) {\n                    data.a = data.a.filter(\n                      (appointment) => appointment.id !== deleted\n                    );\n                  }\n                  setData(data);\n                }}\n              />\n              <ViewState />\n              <WeekView />\n              <DayView />\n              <MonthView />\n              <Toolbar />\n              <DateNavigator />\n              <TodayButton />\n              <ViewSwitcher />\n              <Appointments />\n              <EditRecurrenceMenu />\n              <DragDropProvider />\n              <CurrentTimeIndicator\n                shadePreviousAppointments\n                shadePreviousCells\n              />\n              <AppointmentTooltip\n                showOpenButton\n                showDeleteButton\n                showCloseButton\n              />\n              <AppointmentForm\n                onVisibilityChange={(visible) => {\n                  if (visible) {\n                    window.scroll({ top: 0, left: 0, behavior: \"auto\" });\n                  }\n                }}\n              />\n            </Scheduler>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default Calendar;\n","import React from \"react\";\nimport { useLocation, useHistory, useRouteMatch } from \"react-router-dom\";\nimport LZString from \"lz-string\";\n\nimport Calendar from \"./Calendar\";\n\n// TODO: compare other ways of compressing json into URI param\n// other packages that can do this include: json-url, jsoncrush, protobufjs, urlon\n// check for too long url if we find a limit\n\nconst latestVersion = \"v1\";\n\nfunction encode(data) {\n  const params = LZString.compressToEncodedURIComponent(JSON.stringify(data));\n  return params;\n}\n\nfunction decode(params, version = latestVersion) {\n  if (version !== latestVersion) {\n    throw new Error(`Unsupported version ${version}`);\n  }\n  // n = name of calendar, u = users (strings), a = appointments, l = last edited, ui = user id (-1 is anonymous), t = timestamp\n  let data = {\n    // n: \"\",\n    a: [],\n    // u: [],\n    // l: \"\",\n  };\n  if (params) {\n    data = JSON.parse(LZString.decompressFromEncodedURIComponent(params));\n  }\n  if (\n    !data ||\n    !data.a ||\n    // !data.u ||\n    !Array.isArray(data.a) // ||\n    // !Array.isArray(data.u)\n  ) {\n    // TODO: add more checks or drop unused parts of the JSON?\n    throw new Error(\"Invalid params payload\");\n  }\n  return data;\n}\n\nfunction QueryParser() {\n  const location = useLocation();\n  const history = useHistory();\n  const matchVersion = useRouteMatch({\n    path: \"/:v\",\n    exact: true,\n    sensitive: true,\n    strict: true,\n  });\n\n  let data;\n  try {\n    let params = location.search.substring(1);\n    const version = matchVersion?.params?.v;\n    if (version !== latestVersion) {\n      params = encode(decode(params, version));\n      history.push(`/${latestVersion}?${params}`);\n      return null;\n    }\n    data = decode(params);\n  } catch (e) {\n    // console.error(e);\n    history.push(`/${latestVersion}?`);\n    return null;\n  }\n\n  function setData(data) {\n    data.l = new Date();\n    const params = encode(data);\n    history.push(`/${latestVersion}?${params}`);\n  }\n\n  return <Calendar data={data} setData={setData} />;\n}\n\nexport default QueryParser;\n","import React, { useMemo } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport QueryParser from \"./QueryParser\";\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <QueryParser />\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}