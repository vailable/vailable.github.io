{"version":3,"sources":["CalendarPage.js","QueryParser.js","App.js","index.js"],"names":["TitleDialog","name","open","close","setName","titleText","useRef","Dialog","onClose","DialogTitle","DialogContent","TextField","autoFocus","type","inputRef","defaultValue","DialogActions","Button","onClick","current","value","CopiedSnackBar","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Calendar","data","setData","a","onCommitChanges","added","changed","deleted","startingAddedId","length","id","map","appointment","undefined","filter","startDayHour","endDayHour","shadePreviousAppointments","shadePreviousCells","showOpenButton","showDeleteButton","showCloseButton","onVisibilityChange","visible","window","scroll","top","left","behavior","CalendarPage","useState","titleDialogOpen","setTitleDialogOpen","copiedSnackbarOpen","setCopiedSnackbarOpen","copiedSnackbarMessage","setCopiedSnackbarMessage","location","useLocation","history","useHistory","Container","disableGutters","n","Paper","Grid","container","item","xs","direction","justify","alignItems","style","paddingTop","paddingLeft","paddingRight","spacing","fontSize","Typography","variant","noWrap","size","l","endIcon","url","pathname","search","navigator","share","text","catch","e","clipboard","writeText","then","goBack","goForward","encode","LZString","compressToEncodedURIComponent","JSON","stringify","decode","params","version","Error","parse","decompressFromEncodedURIComponent","Array","isArray","QueryParser","matchVersion","useRouteMatch","path","exact","sensitive","strict","substring","v","push","Date","App","prefersDarkMode","useMediaQuery","theme","useMemo","createMuiTheme","palette","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a0c0bdc.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport EventAvailableTwoToneIcon from \"@material-ui/icons/EventAvailableTwoTone\";\nimport ShareTwoToneIcon from \"@material-ui/icons/ShareTwoTone\";\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  MonthView,\n  Appointments,\n  Toolbar,\n  DateNavigator,\n  AppointmentTooltip,\n  AppointmentForm,\n  ViewSwitcher,\n  TodayButton,\n  DayView,\n  WeekView,\n  EditRecurrenceMenu,\n  CurrentTimeIndicator,\n  DragDropProvider,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\n// TODO:\n// set name and remember for future adds? with a cookie or local storage?\n// auto display widest range by default?\n\nfunction TitleDialog({ name, open, close, setName }) {\n  const titleText = useRef();\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Calendar Name</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          type=\"text\"\n          inputRef={titleText}\n          defaultValue={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button\n          onClick={() => {\n            setName(titleText.current.value);\n            close();\n          }}\n        >\n          Okay\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction CopiedSnackBar({ message, open, close }) {\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      open={open}\n      autoHideDuration={3000}\n      onClose={close}\n      message={message}\n    />\n  );\n}\n\nconst defaultCopiedMessage =\n  \"Link copied! Paste it in a message or email to share\";\n\nfunction Calendar({ data, setData }) {\n  return (\n    <Scheduler data={data.a}>\n      <EditingState\n        onCommitChanges={({ added, changed, deleted }) => {\n          if (added) {\n            const startingAddedId =\n              data.a.length > 0 ? data.a[data.a.length - 1].id + 1 : 0;\n            data.a = [...data.a, { id: startingAddedId, ...added }];\n          }\n          if (changed) {\n            data.a = data.a.map((appointment) =>\n              changed[appointment.id]\n                ? { ...appointment, ...changed[appointment.id] }\n                : appointment\n            );\n          }\n          if (deleted !== undefined) {\n            data.a = data.a.filter((appointment) => appointment.id !== deleted);\n          }\n          setData(data);\n        }}\n      />\n      <ViewState />\n      <MonthView />\n      <WeekView startDayHour={7.5} endDayHour={22.5} />\n      <DayView startDayHour={7.5} endDayHour={22.5} />\n      <Toolbar />\n      <DateNavigator />\n      <TodayButton />\n      <ViewSwitcher />\n      <Appointments />\n      <EditRecurrenceMenu />\n      <DragDropProvider />\n      <CurrentTimeIndicator shadePreviousAppointments shadePreviousCells />\n      <AppointmentTooltip showOpenButton showDeleteButton showCloseButton />\n      <AppointmentForm\n        onVisibilityChange={(visible) => {\n          if (visible) {\n            window.scroll({ top: 0, left: 0, behavior: \"auto\" });\n          }\n        }}\n      />\n    </Scheduler>\n  );\n}\n\nfunction CalendarPage({ data, setData }) {\n  const [titleDialogOpen, setTitleDialogOpen] = useState(false);\n  const [copiedSnackbarOpen, setCopiedSnackbarOpen] = useState(false);\n  const [copiedSnackbarMessage, setCopiedSnackbarMessage] = useState(\n    defaultCopiedMessage\n  );\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <Container disableGutters>\n      <TitleDialog\n        name={data.n}\n        open={titleDialogOpen}\n        close={() => setTitleDialogOpen(false)}\n        setName={(name) => {\n          data.n = name;\n          setData(data);\n        }}\n      />\n      <CopiedSnackBar\n        message={copiedSnackbarMessage}\n        open={copiedSnackbarOpen}\n        close={() => setCopiedSnackbarOpen(false)}\n      />\n      <Paper>\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{\n              paddingTop: \"0.5rem\",\n              paddingLeft: \"0.5rem\",\n              paddingRight: \"0.5rem\",\n            }}\n            spacing={2}\n          >\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n              spacing={1}\n              // wrap=\"nowrap\"\n            >\n              <Grid item>\n                <EventAvailableTwoToneIcon fontSize=\"large\" />\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h5\" noWrap>\n                  Vailable\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"caption\" noWrap>\n                  Easy Calendar Sharing\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n              spacing={1}\n              // wrap=\"nowrap\"\n            >\n              <Grid item>\n                <Typography noWrap>\n                  Directions: Double tap on the calendar to add an event\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={1}\n              // wrap=\"nowrap\"\n            >\n              <Grid item>\n                <Button size=\"large\" onClick={() => setTitleDialogOpen(true)}>\n                  {data.n || \"Unnamed Calendar\"}\n                </Button>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"caption\" noWrap>\n                  last edited {data?.l || \"never\"}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"flex-end\"\n              alignItems=\"center\"\n              spacing={1}\n              // wrap=\"nowrap\"\n            >\n              <Grid item>\n                <Button\n                  size=\"medium\"\n                  variant=\"outlined\"\n                  onClick={() => setData({ a: [] })}\n                >\n                  New Calendar\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  size=\"medium\"\n                  variant=\"outlined\"\n                  endIcon={<ShareTwoToneIcon />}\n                  onClick={async () => {\n                    let url = `https://vailable.github.io${location.pathname}${location.search}`;\n                    try {\n                      // const resp = await fetch(\n                      //   `https://tinyurl.com/api-create.php?url=${encodeURIComponent(\n                      //     url\n                      //   )}`\n                      // );\n                      // const newUrl = await resp.text();\n                      // if (newUrl.startsWith(\"https://tinyurl.com/\")) {\n                      //   url = newUrl;\n                      // }\n                      if (window.navigator.share) {\n                        window.navigator\n                          .share({\n                            // title: data.n || \"Vailable\",\n                            text: `${\n                              data.n ? `${data.n} - ` : \"\"\n                            }Vailable - Easy Calendar Sharing App`,\n                            url,\n                          })\n                          .catch((e) => {\n                            setCopiedSnackbarMessage(\n                              \"Error #1 sharing automatically. Copy the URL of the current page to share your calendar\"\n                            );\n                            setCopiedSnackbarOpen(true);\n                          });\n                        return;\n                      } else if (window.navigator.clipboard) {\n                        window.navigator.clipboard\n                          .writeText(url)\n                          .then(() => {\n                            setCopiedSnackbarMessage(defaultCopiedMessage);\n                            setCopiedSnackbarOpen(true);\n                          })\n                          .catch((e) => {\n                            // TODO: pop up a modal with the link and directions to copy and send to someone to share\n                            setCopiedSnackbarMessage(\n                              \"Error #2 sharing automatically. Copy the URL of the current page to share your calendar\"\n                            );\n                            setCopiedSnackbarOpen(true);\n                          });\n                        return;\n                      }\n                      setCopiedSnackbarMessage(\n                        \"Error #3 sharing automatically. Copy the URL of the current page to share your calendar\"\n                      );\n                      setCopiedSnackbarOpen(true);\n                    } catch (e) {\n                      // console.error(e);\n                      setCopiedSnackbarMessage(\n                        \"Error #4 sharing automatically. Copy the URL of the current page to share your calendar\"\n                      );\n                      setCopiedSnackbarOpen(true);\n                    }\n                  }}\n                >\n                  Share Changes\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  size=\"medium\"\n                  variant=\"outlined\"\n                  onClick={() => history.goBack()}\n                >\n                  Undo\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  size=\"medium\"\n                  variant=\"outlined\"\n                  onClick={() => history.goForward()}\n                >\n                  Redo\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Calendar data={data} setData={setData} />\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default CalendarPage;\n","import React from \"react\";\nimport { useLocation, useHistory, useRouteMatch } from \"react-router-dom\";\nimport LZString from \"lz-string\";\n\nimport CalendarPage from \"./CalendarPage\";\n\n// TODO: compare other ways of compressing json into URI param\n// other packages that can do this include: json-url, jsoncrush, protobufjs, urlon\n// check for too long url if we find a limit\n\nconst latestVersion = \"v1\";\n\nfunction encode(data) {\n  const params = LZString.compressToEncodedURIComponent(JSON.stringify(data));\n  return params;\n}\n\nfunction decode(params, version = latestVersion) {\n  if (version !== latestVersion) {\n    throw new Error(`Unsupported version ${version}`);\n  }\n  // n = name of calendar, u = users (strings), a = appointments, l = last edited, ui = user id (-1 is anonymous), t = timestamp\n  let data = {\n    // n: \"\",\n    a: [],\n    // u: [],\n    // l: \"\",\n  };\n  if (params) {\n    data = JSON.parse(LZString.decompressFromEncodedURIComponent(params));\n  }\n  if (\n    !data ||\n    !data.a ||\n    // !data.u ||\n    !Array.isArray(data.a) // ||\n    // !Array.isArray(data.u)\n  ) {\n    // TODO: add more checks or drop unused parts of the JSON?\n    throw new Error(\"Invalid params payload\");\n  }\n  return data;\n}\n\nfunction QueryParser() {\n  const location = useLocation();\n  const history = useHistory();\n  const matchVersion = useRouteMatch({\n    path: \"/:v\",\n    exact: true,\n    sensitive: true,\n    strict: true,\n  });\n\n  let data;\n  try {\n    let params = location.search.substring(1);\n    const version = matchVersion?.params?.v;\n    if (version !== latestVersion) {\n      params = encode(decode(params, version));\n      history.push(`/${latestVersion}?${params}`);\n      return null;\n    }\n    data = decode(params);\n  } catch (e) {\n    // console.error(e);\n    history.push(`/${latestVersion}?`);\n    return null;\n  }\n\n  function setData(data) {\n    data.l = new Date();\n    const params = encode(data);\n    history.push(`/${latestVersion}?${params}`);\n  }\n\n  return <CalendarPage data={data} setData={setData} />;\n}\n\nexport default QueryParser;\n","import React, { useMemo } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport QueryParser from \"./QueryParser\";\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <QueryParser />\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}